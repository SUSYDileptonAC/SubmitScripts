import FWCore.ParameterSet.Config as cms
import pickle
pickledCfg="""ccopy_reg
_reconstructor
p0
(cFWCore.ParameterSet.Config
Process
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'MessageLogger'
p6
g0
(cFWCore.ParameterSet.Modules
Service
p7
g2
Ntp8
Rp9
(dp10
S'_Parameterizable__parameterNames'
p11
(lp12
S'fullTest2_baseCuts_SUSY_LM0_Cern'
p13
aS'destinations'
p14
asS'_isFrozen'
p15
I00
sS'_isModified'
p16
I00
sg13
g0
(cFWCore.ParameterSet.Types
PSet
p17
g2
Ntp18
Rp19
(dp20
g15
I00
sS'_ParameterTypeBase__isTracked'
p21
I00
sS'FwkReport'
p22
g0
(g17
g2
Ntp23
Rp24
(dp25
g15
I00
sg21
I00
sg16
I00
sS'reportEvery'
p26
g0
(cFWCore.ParameterSet.Types
int32
p27
g2
Ntp28
Rp29
(dp30
g15
I00
sg21
I00
sS'_value'
p31
I1000
sbsS'limit'
p32
g0
(g27
g2
Ntp33
Rp34
(dp35
g15
I00
sg21
I00
sg31
I1000
sbsg11
(lp36
g26
ag32
asbsg16
I00
sS'default'
p37
g0
(g17
g2
Ntp38
Rp39
(dp40
g15
I00
sg21
I00
sg32
g0
(g27
g2
Ntp41
Rp42
(dp43
g15
I00
sg21
I00
sg31
I100
sbsg16
I00
sg11
(lp44
g32
asbsS'Root_NoDictionary'
p45
g0
(g17
g2
Ntp46
Rp47
(dp48
g15
I00
sg21
I00
sg32
g0
(g27
g2
Ntp49
Rp50
(dp51
g15
I00
sg21
I00
sg31
I0
sbsg16
I00
sg11
(lp52
g32
asbsS'INFO'
p53
g0
(g17
g2
Ntp54
Rp55
(dp56
g15
I00
sg21
I00
sg32
g0
(g27
g2
Ntp57
Rp58
(dp59
g15
I00
sg21
I00
sg31
I0
sbsg16
I00
sg11
(lp60
g32
asbsS'FwkJob'
p61
g0
(g17
g2
Ntp62
Rp63
(dp64
g15
I00
sg21
I00
sg32
g0
(g27
g2
Ntp65
Rp66
(dp67
g15
I00
sg21
I00
sg31
I0
sbsg16
I00
sg11
(lp68
g32
asbsS'FwkSummary'
p69
g0
(g17
g2
Ntp70
Rp71
(dp72
g15
I00
sg21
I00
sg16
I00
sg26
g0
(g27
g2
Ntp73
Rp74
(dp75
g15
I00
sg21
I00
sg31
I1
sbsg32
g0
(g27
g2
Ntp76
Rp77
(dp78
g15
I00
sg21
I00
sg31
I10000000
sbsg11
(lp79
g26
ag32
asbsg11
(lp80
g53
ag22
ag37
ag45
ag61
ag69
aS'threshold'
p81
asg81
g0
(cFWCore.ParameterSet.Types
string
p82
g2
Ntp83
Rp84
(dp85
g15
I00
sg21
I00
sg31
g53
sbsbsS'_lineNumber'
p86
I10
sS'_filename'
p87
S'/build/ap/229/build/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_9/python/FWCore/ParameterSet/Modules.py'
p88
sS'_shortFilename'
p89
S'FWCore/ParameterSet/Modules.py'
p90
sS'_TypedParameterizable__type'
p91
g6
sg14
g0
(cFWCore.ParameterSet.Types
vstring
p92
c__builtin__
list
p93
(lp94
g13
atp95
Rp96
(dp97
g15
I00
sg21
I00
sS'_nPerLine'
p98
I1
sbsbsS'_Process__sequences'
p99
(dp100
sS'_Process__services'
p101
(dp102
g6
g9
sS'TFileService'
p103
g0
(g7
g2
Ntp104
Rp105
(dp106
g11
(lp107
S'fileName'
p108
asg15
I00
sg16
I00
sg86
I10
sg87
g88
sg108
g0
(g82
g2
Ntp109
Rp110
(dp111
g15
I00
sg21
I01
sg31
S'fullTest2.baseCuts.SUSY_LM0_Cern.root'
p112
sbsg89
S'FWCore/ParameterSet/Modules.py'
p113
sg91
g103
sbssS'_Process__source'
p114
g0
(cFWCore.ParameterSet.Modules
Source
p115
g2
Ntp116
Rp117
(dp118
g11
(lp119
S'duplicateCheckMode'
p120
aS'fileNames'
p121
aS'skipEvents'
p122
asg15
I00
sg16
I01
sg120
g0
(g82
g2
Ntp123
Rp124
(dp125
g15
I00
sg21
I00
sg31
S'noDuplicateCheck'
p126
sbsg86
I162
sg87
g88
sg122
g0
(cFWCore.ParameterSet.Types
uint32
p127
g2
Ntp128
Rp129
(dp130
g15
I00
sg21
I00
sg31
I0
sbsg121
g0
(g92
g93
(lp131
tp132
Rp133
(dp134
g15
I00
sg21
I00
sg98
I1
sbsg89
S'FWCore/ParameterSet/Modules.py'
p135
sg91
S'PoolSource'
p136
sbsS'DiLeptonAnalysis'
p137
g0
(cFWCore.ParameterSet.Modules
EDAnalyzer
p138
g2
Ntp139
Rp140
(dp141
g15
I00
sS'tnp_method'
p142
g0
(g82
g2
Ntp143
Rp144
(dp145
g15
I00
sg21
I00
sg31
S'False'
p146
sbsS'user_nNeg_Electrons'
p147
g0
(g27
g2
Ntp148
Rp149
(dp150
g15
I00
sg21
I00
sg31
I0
sbsg86
I122
sS'beamSpotSource'
p151
g0
(cFWCore.ParameterSet.Types
InputTag
p152
g2
Ntp153
Rp154
(dp155
g15
I00
sg21
I01
sS'_InputTag__processName'
p156
S''
p157
sS'_InputTag__productInstance'
p158
g157
sS'_InputTag__moduleLabel'
p159
S'offlineBeamSpot'
p160
sbsS'rej_Cuts'
p161
g0
(cFWCore.ParameterSet.Types
bool
p162
g2
Ntp163
Rp164
(dp165
g15
I00
sg21
I00
sg31
I00
sbsS'user_pt2JetMin'
p166
g0
(cFWCore.ParameterSet.Types
double
p167
g2
Ntp168
Rp169
(dp170
g15
I00
sg21
I00
sg31
F80.0
sbsS'electronSource'
p171
g0
(g152
g2
Ntp172
Rp173
(dp174
g15
I00
sg21
I01
sg156
g157
sg158
g157
sg159
S'allLayer1Electrons'
p175
sbsS'user_pt3JetMin'
p176
g0
(g167
g2
Ntp177
Rp178
(dp179
g15
I00
sg21
I00
sg31
F80.0
sbsS'tnp_tag_dr'
p180
g0
(g167
g2
Ntp181
Rp182
(dp183
g15
I00
sg21
I00
sg31
F0.10000000000000001
sbsS'acc_JetEMF'
p184
g0
(g167
g2
Ntp185
Rp186
(dp187
g15
I00
sg21
I00
sg31
F0.10000000000000001
sbsS'rej_LeptonCut'
p188
g0
(g82
g2
Ntp189
Rp190
(dp191
g15
I00
sg21
I00
sg31
S'2Leptons'
p192
sbsS'acc_Electrond0'
p193
g0
(g167
g2
Ntp194
Rp195
(dp196
g15
I00
sg21
I00
sg31
F0.20000000000000001
sbsS'iso_MuonECALIso'
p197
g0
(g167
g2
Ntp198
Rp199
(dp200
g15
I00
sg21
I00
sg31
F4.0
sbsS'user_ElectronID'
p201
g0
(g82
g2
Ntp202
Rp203
(dp204
g15
I00
sg21
I00
sg31
S'eidTight'
p205
sbsS'user_nNeg_Muons'
p206
g0
(g27
g2
Ntp207
Rp208
(dp209
g15
I00
sg21
I00
sg31
I1
sbsS'user_nPos_Electrons'
p210
g0
(g27
g2
Ntp211
Rp212
(dp213
g15
I00
sg21
I00
sg31
I0
sbsg11
(lp214
g142
aS'metSource'
p215
ag147
ag151
ag161
ag166
ag171
ag176
aS'rej_METCut'
p216
ag184
ag188
ag193
aS'acc_MuonnHits'
p217
ag201
ag206
ag210
aS'user_nbJets'
p218
aS'user_nJets'
p219
ag197
aS'rej_bTagCut'
p220
aS'trackSource'
p221
ag180
aS'user_METMin'
p222
aS'user_nPos_Muons'
p223
aS'iso_MuonHCALIso'
p224
aS'acc_Muond0'
p225
aS'mcInfo'
p226
aS'jetSource'
p227
aS'iso_MuonIso'
p228
aS'acc_ElectronEta'
p229
aS'tnp_tag_pt'
p230
aS'rej_JetCut'
p231
aS'user_bTagDiscriminator'
p232
aS'acc_MuonEta'
p233
aS'user_bJetAlgo'
p234
aS'acc_JetPt'
p235
aS'CSA_weighted'
p236
aS'mcSource'
p237
aS'iso_ElectronIso'
p238
aS'acc_MuonPt'
p239
aS'acc_MuonChi2'
p240
aS'tnp_high_SB1'
p241
aS'tnp_high_SB2'
p242
aS'muonSource'
p243
aS'tnp_low_inv'
p244
aS'acc_ElectronPt'
p245
aS'tnp_low_SB2'
p246
aS'user_pt4JetMin'
p247
aS'tnp_low_SB1'
p248
aS'tnp_tag_eta'
p249
aS'debug'
p250
aS'tnp_high_inv'
p251
aS'acc_JetEta'
p252
aS'user_pt1JetMin'
p253
asg218
g0
(g27
g2
Ntp254
Rp255
(dp256
g15
I00
sg21
I00
sg31
I2
sbsg219
g0
(g27
g2
Ntp257
Rp258
(dp259
g15
I00
sg21
I00
sg31
I4
sbsg217
g0
(g167
g2
Ntp260
Rp261
(dp262
g15
I00
sg21
I00
sg31
I11
sbsg220
g0
(g162
g2
Ntp263
Rp264
(dp265
g15
I00
sg21
I00
sg31
I00
sbsg221
g0
(g152
g2
Ntp266
Rp267
(dp268
g15
I00
sg21
I01
sg156
g157
sg158
g157
sg159
S'generalTracks'
p269
sbsg216
g0
(g162
g2
Ntp270
Rp271
(dp272
g15
I00
sg21
I00
sg31
I01
sbsg222
g0
(g167
g2
Ntp273
Rp274
(dp275
g15
I00
sg21
I00
sg31
F50.0
sbsg215
g0
(g152
g2
Ntp276
Rp277
(dp278
g15
I00
sg21
I01
sg156
g157
sg158
g157
sg159
S'allLayer1METsSC5'
p279
sbsg91
S'SUSYDiLeptonAnalysis'
p280
sg228
g0
(g167
g2
Ntp281
Rp282
(dp283
g15
I00
sg21
I00
sg31
F0.20000000000000001
sbsg89
S'/.automount/home/home__home4/institut_1b/edelhoff/superSymmetry/testS/SubmitScripts/test/SUSY/PAT/fullTest2/baseCuts/psets/fullTest2.baseCuts.SUSY_LM0_Cern_cfg.py'
p284
sg225
g0
(g167
g2
Ntp285
Rp286
(dp287
g15
I00
sg21
I00
sg31
F0.20000000000000001
sbsg226
g0
(g162
g2
Ntp288
Rp289
(dp290
g15
I00
sg21
I00
sg31
I00
sbsg227
g0
(g152
g2
Ntp291
Rp292
(dp293
g15
I00
sg21
I01
sg156
g157
sg158
g157
sg159
S'allLayer1JetsSC5'
p294
sbsg224
g0
(g167
g2
Ntp295
Rp296
(dp297
g15
I00
sg21
I00
sg31
F6.0
sbsg229
g0
(g167
g2
Ntp298
Rp299
(dp300
g15
I00
sg21
I00
sg31
F2.5
sbsg230
g0
(g167
g2
Ntp301
Rp302
(dp303
g15
I00
sg21
I00
sg31
F10.0
sbsg231
g0
(g162
g2
Ntp304
Rp305
(dp306
g15
I00
sg21
I00
sg31
I01
sbsg232
g0
(g167
g2
Ntp307
Rp308
(dp309
g15
I00
sg21
I00
sg31
F0.40000000000000002
sbsS'_Labelable__label'
p310
g137
sg233
g0
(g167
g2
Ntp311
Rp312
(dp313
g15
I00
sg21
I00
sg31
F2.1000000000000001
sbsg242
g0
(g167
g2
Ntp314
Rp315
(dp316
g15
I00
sg21
I00
sg31
F140.0
sbsg235
g0
(g167
g2
Ntp317
Rp318
(dp319
g15
I00
sg21
I00
sg31
F30.0
sbsg236
g0
(g162
g2
Ntp320
Rp321
(dp322
g15
I00
sg21
I00
sg31
I00
sbsg237
g0
(g152
g2
Ntp323
Rp324
(dp325
g15
I00
sg21
I01
sg156
g157
sg158
g157
sg159
S'genParticles'
p326
sbsg238
g0
(g167
g2
Ntp327
Rp328
(dp329
g15
I00
sg21
I00
sg31
F0.40000000000000002
sbsg239
g0
(g167
g2
Ntp330
Rp331
(dp332
g15
I00
sg21
I00
sg31
F10.0
sbsg240
g0
(g167
g2
Ntp333
Rp334
(dp335
g15
I00
sg21
I00
sg31
F10.0
sbsg241
g0
(g167
g2
Ntp336
Rp337
(dp338
g15
I00
sg21
I00
sg31
F60.0
sbsg234
g0
(g82
g2
Ntp339
Rp340
(dp341
g15
I00
sg21
I00
sg31
S'jetProbabilityBJetTags'
p342
sbsg243
g0
(g152
g2
Ntp343
Rp344
(dp345
g15
I00
sg21
I01
sg156
g157
sg158
g157
sg159
S'allLayer1Muons'
p346
sbsg16
I00
sg244
g0
(g167
g2
Ntp347
Rp348
(dp349
g15
I00
sg21
I00
sg31
F80.0
sbsg245
g0
(g167
g2
Ntp350
Rp351
(dp352
g15
I00
sg21
I00
sg31
F10.0
sbsg246
g0
(g167
g2
Ntp353
Rp354
(dp355
g15
I00
sg21
I00
sg31
F120.0
sbsg247
g0
(g167
g2
Ntp356
Rp357
(dp358
g15
I00
sg21
I00
sg31
F80.0
sbsg248
g0
(g167
g2
Ntp359
Rp360
(dp361
g15
I00
sg21
I00
sg31
F40.0
sbsg223
g0
(g27
g2
Ntp362
Rp363
(dp364
g15
I00
sg21
I00
sg31
I1
sbsg249
g0
(g167
g2
Ntp365
Rp366
(dp367
g15
I00
sg21
I00
sg31
F2.0
sbsg87
g284
sg250
g0
(g162
g2
Ntp368
Rp369
(dp370
g15
I00
sg21
I00
sg31
I00
sbsg251
g0
(g167
g2
Ntp371
Rp372
(dp373
g15
I00
sg21
I00
sg31
F100.0
sbsg252
g0
(g167
g2
Ntp374
Rp375
(dp376
g15
I00
sg21
I00
sg31
F2.3999999999999999
sbsg253
g0
(g167
g2
Ntp377
Rp378
(dp379
g15
I00
sg21
I00
sg31
F120.0
sbsbsS'_Process__OverWriteCheck'
p380
I00
sS'_Process__psets'
p381
(dp382
S'maxEvents'
p383
g0
(g17
g2
Ntp384
Rp385
(dp386
g15
I00
sg21
I00
sg16
I01
sg11
(lp387
S'input'
p388
asg310
g383
sg388
g0
(g27
g2
Ntp389
Rp390
(dp391
g15
I00
sg21
I00
sg31
I1
sbsbsS'options'
p392
g0
(g17
g2
Ntp393
Rp394
(dp395
g15
I00
sg21
I00
sg16
I00
sS'wantSummary'
p396
g0
(g162
g2
Ntp397
Rp398
(dp399
g15
I00
sg21
I00
sg31
I01
sbsg11
(lp400
g396
asg310
g392
sbssg103
g105
sS'_Process__essources'
p401
(dp402
sg136
g117
sg383
g385
sS'source'
p403
g117
sS'_Process__vpsets'
p404
(dp405
sS'_Process__name'
p406
S'Analysis'
p407
sS'_cloneToObjectDict'
p408
(dp409
I153724172
g0
(cFWCore.ParameterSet.SequenceTypes
Path
p410
g2
Ntp411
Rp412
(dp413
g15
I00
sS'_seq'
p414
g140
sg16
I00
sg310
S'p'
p415
sbsI153724460
g385
sI153937484
g394
sI153724428
g140
ssS'_Process__esprefers'
p416
(dp417
sS'_Process__schedule'
p418
NsS'_Process__outputmodules'
p419
(dp420
sS'_Process__analyzers'
p421
(dp422
g137
g140
ssS'_Process__producers'
p423
(dp424
sS'_Process__filters'
p425
(dp426
sS'_Process__looper'
p427
NsS'_Process__endpaths'
p428
g0
(cFWCore.ParameterSet.DictTypes
SortedKeysDict
p429
c__builtin__
dict
p430
(dp431
tp432
Rp433
(dp434
S'list'
p435
(lp436
sbsS'_Process__esproducers'
p437
(dp438
sg415
g412
sS'_Process__paths'
p439
g0
(g429
g430
(dp440
g415
g412
stp441
Rp442
(dp443
g435
(lp444
g415
asbsS'_Process__partialschedules'
p445
(dp446
sg392
g394
sS'_Process__isStrict'
p447
I00
sb."""
process = pickle.loads(pickledCfg)
